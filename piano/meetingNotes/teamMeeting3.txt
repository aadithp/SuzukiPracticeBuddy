Date: 05/11/2020
Topic: Initial Product Plan

Portfolio A:
 - Structure found in spe2020 github under assessment

 - Stakeholders - Bristol Music School, Suzuki method creators
 - Key user story - probably student or teacher
 - then develop a list of requirements

 - Personal data - name and email
 - Security strategy/password handling
 - ethics and cookie laws
 
 - Architecture - attributes and requirements derived from client interactions
 - what processes/applications will be used
 - high-level architecture diagram of the system structure
 
 - outline strategy/approach that will be used in the implementation
 - select a core function/component, providing a justification why you chose it
 - draw up a table detailing test cases to test this function/component
 
 - outline strategy/approach that will be used in the integration/deployment, and justify
 - select a core user story, providing a justification why you chose it
 - draw up a table detailing test cases to test this user story (may need to be manually executed)
 
 - provide a sample of a static and dynamic UML model of the system
 - give context for the use case being modelled, motivation for this aspect, and a brif reflection on the choices/knowledge gained


Sections of Portfolio
 - Overview and Requirements -> Aadith
 - Personal Data, Privacy, Security and Ethics Management -> Daniel
 - Architecture -> Yuqing
 - Development/Release Testing -> Joe
 - OO Design and UML -> Tom


MVP:
*Aadith will think about more for Overview/Requirements*
 - assume parent is always present
 - possibly just a list of excercises/pieces for the week, with tickboxes
 - teacher can set which pieces to do at the start of each week


Mentor Chat:
 - need to do requirements and build a project plan
 - otherwise probably at the right stage
 - split work into pairs?
 - individually, meeting every week?
 - all together on a call?
 - "as soon as ready, identify user stories for MVP and start cutting code" - Simon Lock(ed down)
 - focus more on MVP than Portfolio A for now - it is formative so don't worry too much about it
 - given example of architecture design, UML diagram, and interactions in chat for call
    - plus examples of a good portfolio
 - market research into what we think it should be like
 - possibly going to have to be just Android, as Apple development/deployment is difficult
 - might not need a license if it isn't open source
 - all rights reserved and warning of no copying may be enough - GNU AGPL v3.0 maybe
 -  coppyright message: all modifications and adaptations are strictly prohibited

